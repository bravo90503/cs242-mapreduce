
 
  
   
  Computational linguistics - Wikipedia 
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
  
 
   
   
    
   
    
    
    
    
   Computational linguistics 
    
    
     From Wikipedia, the free encyclopedia
     
     
     
     Jump to navigation Jump to search 
    
     
      
       Interdisciplinary scientific field
       
      
      
       This article is about the scientific field. For the journal, see Computational Linguistics (journal).
       
      
      
       
        
         Part of a series on
        
        
         Linguistics
        
        
          
          
           
            Outline
            History
            Index
           
          
        
        
          
          
           
            General linguistics
           
            
            
             Diachronic 
             Lexicography 
             Morphology 
             Phonology 
             Pragmatics 
             Semantics 
             Syntax 
             Syntax–semantics interface 
             Typology‎
            
           
           
        
        
          
          
           
            Applied linguistics
           
            
            
             Acquisition 
             Anthropological 
             Applied 
             Computational 
             Discourse analysis 
             Documentation 
             Forensic 
             History of linguistics 
             Neurolinguistics 
             Philosophy of language 
             Phonetics 
             Psycholinguistics 
             Sociolinguistics 
             Text and corpus linguistics 
             Translating and interpreting 
             Writing systems
            
           
           
        
        
          
          
           
            Theoretical frameworks
           
            
            
             Formalist 
              
               Glossematics 
               Constituency 
               Dependency 
               Distributionalism 
               Generative
               
             Functional 
              
               Prague school 
               Functional discourse grammar 
               Cognitive 
               Usage-based 
               Systemic functional
               
             Structuralism
            
           
           
        
        
          
          
           
            Topics
           
            
            
             Autonomy of syntax 
             Compositionality 
             Conservative/innovative forms 
             Descriptivism 
             Etymology 
             Iconicity 
             Internet linguistics 
             LGBT linguistics 
             Origin of language 
             Orthography 
             Prescriptivism 
             Second-language acquisition 
             Theory of language
            
           
           
        
        
           Portal
        
        
         
          
           
            v
            t
            e
           
          
        
       
       
      Computational linguistics is an interdisciplinary field concerned with the computational modelling of natural language, as well as the study of appropriate computational approaches to linguistic questions. In general, computational linguistics draws upon linguistics, computer science, artificial intelligence, mathematics, logic, philosophy, cognitive science, cognitive psychology, psycholinguistics, anthropology and neuroscience, among others.  
      
       
       
        Contents
        
        
        1 Sub-fields and related areas 
        2 Origins 
        3 Approaches 
          
          3.1 Developmental approaches 
          3.2 Structural approaches 
          3.3 Production approaches 
            
            3.3.1 Text-based interactive approach 
            3.3.2 Speech-based interactive approach 
             
          3.4 Comprehension approaches 
           
        4 Applications 
        5 Legacy 
        6 See also 
        7 References 
        8 Further reading 
        9 External links 
        
       
      Sub-fields and related areas 
      Traditionally, computational linguistics emerged as an area of artificial intelligence performed by computer scientists who had specialized in the application of computers to the processing of a natural language. With the formation of the Association for Computational Linguistics (ACL) and the establishment of independent conference series, the field consolidated during the 1970s and 1980s. 
      The Association for Computational Linguistics defines computational linguistics as:  
      
      
       ...the scientific study of language from a computational perspective. Computational linguists are interested in providing computational models of various kinds of linguistic phenomena.
       
      The term "computational linguistics" is nowadays (2020) taken to be a near-synonym of natural language processing (NLP) and (human) language technology. These terms put a stronger emphasis on aspects of practical applications rather than theoretical inquiry and since the 2000s. In practice, they have largely replaced the term "computational linguistics" in the NLP/ACL community, although they specifically refer to the sub-field of applied computational linguistics, only. 
      Computational linguistics has both theoretical and applied components. Theoretical computational linguistics focuses on issues in theoretical linguistics and cognitive science. Applied computational linguistics focuses on the practical outcome of modeling human language use. 
      Theoretical computational linguistics includes the development of formal theories of grammar (parsing) and semantics, often grounded in formal logics and symbolic (knowledge-based) approaches. Areas of research that are studied by theoretical computational linguistics include:  
      
       Computational complexity of natural language, largely modeled on automata theory, with the application of context-sensitive grammar and linearly bounded Turing machines. 
       Computational semantics comprises defining suitable logics for linguistic meaning representation, automatically constructing them and reasoning with them
       
      Applied computational linguistics is dominated by machine learning, traditionally using statistical methods, since the mid-2010s by neural networks: Socher et al. (2012) was an early Deep Learning tutorial at the ACL 2012, and met with both interest and (at the time) scepticism by most participants. Until then, neural learning was basically rejected because of its lack of statistical interpretability. Until 2015, deep learning had evolved into the major framework of NLP. As for the tasks addressed by applied computational linguistics, see Natural language processing article. This includes classical problems such as the design of POS-taggers (part-of-speech taggers), parsers for natural languages, or tasks such as machine translation (MT), the sub-division of computational linguistics dealing with having computers translate between languages. As one of the earliest and most difficult applications of computational linguistics, MT draws on many subfields and both theoretical and applied aspects. Traditionally, automatic language translation has been considered a notoriously hard branch of computational linguistics. 
      Aside from dichotomy between theoretical and applied computational linguistics, other divisions of computational into major areas according to different criteria exist, including:  
      
       medium of the language being processed, whether spoken or textual: speech recognition and speech synthesis deal with how spoken language can be understood or created using computers. 
       task being performed, e.g., whether analyzing language (recognition) or synthesizing language (generation): Parsing and generation are sub-divisions of computational linguistics dealing respectively with taking language apart and putting it together.
       
      Traditionally, applications of computers to address research problems in other branches of linguistics have been described as tasks within computational linguistics. Among other aspects, this includes  
      
       Computer-aided corpus linguistics, which has been used since the 1970s as a way to make detailed advances in the field of discourse analysis 
       Simulation and study of language evolution in historical linguistics/glottochronology.
       
      Origins 
      Computational linguistics is often grouped within the field of artificial intelligence but was present before the development of artificial intelligence. Computational linguistics originated with efforts in the United States in the 1950s to use computers to automatically translate texts from foreign languages, particularly Russian scientific journals, into English. Since computers can make arithmetic (systematic) calculations much faster and more accurately than humans, it was thought to be only a short matter of time before they could also begin to process language. Computational and quantitative methods are also used historically in the attempted reconstruction of earlier forms of modern languages and sub-grouping modern languages into language families. Earlier methods, such as lexicostatistics and glottochronology, have been proven to be premature and inaccurate. However, recent interdisciplinary studies that borrow concepts from biological studies, especially gene mapping, have proved to produce more sophisticated analytical tools and more reliable results. 
      When machine translation (also known as mechanical translation) failed to yield accurate translations right away, automated processing of human languages was recognized as far more complex than had originally been assumed. Computational linguistics was born as the name of the new field of study devoted to developing algorithms and software for intelligently processing language data. The term "computational linguistics" itself was first coined by David Hays, a founding member of both the Association for Computational Linguistics (ACL) and the International Committee on Computational Linguistics (ICCL). 
      To translate one language into another, it was observed that one had to understand the grammar of both languages, including both morphology (the grammar of word forms) and syntax (the grammar of sentence structure). To understand syntax, one had to also understand the semantics and the lexicon (or 'vocabulary'), and even something of the pragmatics of language use. Thus, what started as an effort to translate between languages evolved into an entire discipline devoted to understanding how to represent and process natural languages using computers. 
      Nowadays research within the scope of computational linguistics is done at computational linguistics departments, computational linguistics laboratories, computer science departments, and linguistics departments. Some research in the field of computational linguistics aims to create working speech or text processing systems while others aim to create a system allowing human-machine interaction. Programs meant for human-machine communication are called conversational agents.  
      Approaches 
      
       
        
         
          
           
          
         
          
           This section may be too long and excessively detailed. Please consider summarizing the material while citing sources as needed.
          
        
       
       
      Just as computational linguistics can be performed by experts in a variety of fields and through a wide assortment of departments, so too can the research fields broach a diverse range of topics. The following sections discuss some of the literature available across the entire field broken into four main area of discourse: developmental linguistics, structural linguistics, linguistic production, and linguistic comprehension.  
      Developmental approaches 
      Language is a cognitive skill that develops throughout the life of an individual. This developmental process has been examined using several techniques, and a computational approach is one of them. Human language development does provide some constraints which make it harder to apply a computational method to understanding it. For instance, during language acquisition, human children are largely only exposed to positive evidence. This means that during the linguistic development of an individual, the only evidence for what is a correct form is provided, and no evidence for what is not correct. This is insufficient information for a simple hypothesis testing procedure for information as complex as language, and so provides certain boundaries for a computational approach to modeling language development and acquisition in an individual. 
      Attempts have been made to model the developmental process of language acquisition in children from a computational angle, leading to both statistical grammars and connectionist models. Work in this realm has also been proposed as a method to explain the evolution of language through history. Using models, it has been shown that languages can be learned with a combination of simple input presented incrementally as the child develops better memory and longer attention span. This was simultaneously posed as a reason for the long developmental period of human children. Both conclusions were drawn because of the strength of the artificial neural network which the project created. 
      The ability of infants to develop language has also been modeled using robots in order to test linguistic theories. Enabled to learn as children might, a model was created based on an affordance model in which mappings between actions, perceptions, and effects were created and linked to spoken words. Crucially, these robots were able to acquire functioning word-to-meaning mappings without needing grammatical structure, vastly simplifying the learning process and shedding light on information which furthers the current understanding of linguistic development. It is important to note that this information could only have been empirically tested using a computational approach. 
      As our understanding of the linguistic development of an individual within a lifetime is continually improved using neural networks and learning robotic systems, it is also important to keep in mind that languages themselves change and develop through time. Computational approaches to understanding this phenomenon have unearthed very interesting information. Using the Price equation and Pólya urn dynamics, researchers have created a system which not only predicts future linguistic evolution but also gives insight into the evolutionary history of modern-day languages. This modeling effort achieved, through computational linguistics, what would otherwise have been impossible. 
      It is clear that the understanding of linguistic development in humans as well as throughout evolutionary time has been fantastically improved because of advances in computational linguistics. The ability to model and modify systems at will affords science an ethical method of testing hypotheses that would otherwise be intractable.  
      Structural approaches 
      To create better computational models of language, an understanding of language's structure is crucial. To this end, the English language has been meticulously studied using computational approaches to better understand how the language works on a structural level. One of the most important pieces of being able to study linguistic structure is the availability of large linguistic corpora or samples. This grants computational linguists the raw data necessary to run their models and gain a better understanding of the underlying structures present in the vast amount of data which is contained in any single language. One of the most cited English linguistic corpora is the Penn Treebank. Derived from widely-different sources, such as IBM computer manuals and transcribed telephone conversations, this corpus contains over 4.5 million words of American English. This corpus has been primarily annotated using part-of-speech tagging and syntactic bracketing and has yielded substantial empirical observations related to language structure. 
      Theoretical approaches to the structure of languages have also been developed. These works allow computational linguistics to have a framework within which to work out hypotheses that will further the understanding of the language in a myriad of ways. One of the original theoretical theses on the internalization of grammar and structure of language proposed two types of models. In these models, rules or patterns learned increase in strength with the frequency of their encounter. The work also created a question for computational linguists to answer: how does an infant learn a specific and non-normal grammar (Chomsky normal form) without learning an overgeneralized version and getting stuck? Theoretical efforts like these set the direction for research to go early in the lifetime of a field of study, and are crucial to the growth of the field. 
      Structural information about languages allows for the discovery and implementation of similarity recognition between pairs of text utterances. For instance, it has recently been proven that based on the structural information present in patterns of human discourse, conceptual recurrence plots can be used to model and visualize trends in data and create reliable measures of similarity between natural textual utterances. This technique is a strong tool for further probing the structure of human discourse. Without the computational approach to this question, the vastly complex information present in discourse data would have remained inaccessible to scientists. 
      Information regarding the structural data of a language is available for English as well as other languages, such as Japanese. Using computational methods, Japanese sentence corpora were analyzed and a pattern of log-normality was found in relation to sentence length. Though the exact cause of this lognormality remains unknown, it is precisely this sort of information which computational linguistics is designed to uncover. This information could lead to further important discoveries regarding the underlying structure of Japanese and could have any number of effects on the understanding of Japanese as a language. Computational linguistics allows for very exciting additions to the scientific knowledge base to happen quickly and with very little room for doubt. 
      Without a computational approach to the structure of linguistic data, much of the information that is available now would still be hidden under the vastness of data within any single language. Computational linguistics allows scientists to parse huge amounts of data reliably and efficiently, creating the possibility for discoveries unlike any seen in most other approaches.  
      Production approaches 
      
       
        
         
          
           
          
         
          
           This section possibly contains original research. Please improve it by verifying the claims made and adding inline citations. Statements consisting only of original research should be removed. (October 2015) (Learn how and when to remove this template message)
          
        
       
       
      The production of language is equally as complex in the information it provides and the necessary skills which a fluent producer must have. That is to say, comprehension is only half the problem of communication. The other half is how a system produces language, and computational linguistics has made interesting discoveries in this area.  
      
       
         
        
         
          
         Alan Turing: computer scientist and namesake developer of the Turing test as a method of measuring the intelligence of a machine
        
       
       
      In a now famous paper published in 1950 Alan Turing proposed the possibility that machines might one day have the ability to "think". As a thought experiment for what might define the concept of thought in machines, he proposed an "imitation test" in which a human subject has two text-only conversations, one with a fellow human and another with a machine attempting to respond like a human. Turing proposes that if the subject cannot tell the difference between the human and the machine, it may be concluded that the machine is capable of thought. Today this test is known as the Turing test and it remains an influential idea in the area of artificial intelligence.  
      
       
         
        
         
          
         Joseph Weizenbaum: former MIT professor and computer scientist who developed ELIZA, a primitive computer program utilizing natural language processing.
        
       
      
       One of the earliest and best-known examples of a computer program designed to converse naturally with humans is the ELIZA program developed by Joseph Weizenbaum at MIT in 1966. The program emulated a Rogerian psychotherapist when responding to written statements and questions posed by a user. It appeared capable of understanding what was said to it and responding intelligently, but in truth, it simply followed a pattern matching routine that relied on only understanding a few keywords in each sentence. Its responses were generated by recombining the unknown parts of the sentence around properly translated versions of the known words. For example, in the phrase "It seems that you hate me" ELIZA understands "you" and "me" which matches the general pattern "you  me", allowing ELIZA to update the words "you" and "me" to "I" and "you" and replying "What makes you think I hate you?". In this example ELIZA has no understanding of the word "hate", but it is not required for a logical response in the context of this type of psychotherapy. 
      Some projects are still trying to solve the problem which first started computational linguistics off as its field in the first place. However, methods have become more refined, and consequently, the results generated by computational linguists have become more enlightening. To improve computer translation, several models have been compared, including hidden Markov models, smoothing techniques, and the specific refinements of those to apply them to verb translation. The model which was found to produce the most natural translations of German and French words was a refined alignment model with a first-order dependence and a fertility model. They also provide efficient training algorithms for the models presented, which can give other scientists the ability to improve further on their results. This type of work is specific to computational linguistics and has applications that could vastly improve understanding of how language is produced and comprehended by computers. 
      Work has also been done in making computers produce language in a more naturalistic manner. Using linguistic input from humans, algorithms have been constructed which are able to modify a system's style of production based on a factor such as linguistic input from a human, or more abstract factors like politeness or any of the five main dimensions of personality. This work takes a computational approach via parameter estimation models to categorize the vast array of linguistic styles we see across individuals and simplify it for a computer to work in the same way, making human–computer interaction much more natural.  
      Text-based interactive approach 
      Many of the earliest and simplest models of human–computer interaction, such as ELIZA for example, involve a text-based input from the user to generate a response from the computer. By this method, words typed by a user trigger the computer to recognize specific patterns and reply accordingly, through a process known as keyword spotting.  
      Speech-based interactive approach 
      Recent technologies have placed more of an emphasis on speech-based interactive systems. These systems, such as Siri of the iOS operating system, operate on a similar pattern-recognizing technique as that of text-based systems, but with the former, the user input is conducted through speech recognition. This branch of linguistics involves the processing of the user's speech as sound waves and the interpreting of the acoustics and language patterns for the computer to recognize the input.  
      Comprehension approaches 
      Much of the focus of modern computational linguistics is on comprehension. With the proliferation of the internet and the abundance of easily accessible written human language, the ability to create a program capable of understanding human language would have many broad and exciting possibilities, including improved search engines, automated customer service, and online education. 
      Early work in comprehension included applying Bayesian statistics to the task of optical character recognition, as illustrated by Bledsoe and Browing in 1959 in which a large dictionary of possible letters was generated by "learning" from example letters and then the probability that any one of those learned examples matched the new input was combined to make a final decision. Other attempts at applying Bayesian statistics to language analysis included the work of Mosteller and Wallace (1963) in which an analysis of the words used in The Federalist Papers was used to attempt to determine their authorship (concluding that Madison most likely authored the majority of the papers). 
      In 1971 Terry Winograd developed an early natural language processing engine capable of interpreting naturally written commands within a simple rule-governed environment. The primary language parsing program in this project was called SHRDLU, which was capable of carrying out a somewhat natural conversation with the user giving it commands, but only within the scope of the toy environment designed for the task. This environment consisted of different shaped and colored blocks, and SHRDLU was capable of interpreting commands such as "Find a block which is taller than the one you are holding and put it into the box." and asking questions such as "I don't understand which pyramid you mean." in response to the user's input. While impressive, this kind of natural language processing has proven much more difficult outside the limited scope of the toy environment. Similarly, a project developed by NASA called LUNAR was designed to provide answers to naturally written questions about the geological analysis of lunar rocks returned by the Apollo missions. These kinds of problems are referred to as question answering. 
      Initial attempts at understanding spoken language were based on work done in the 1960s and 1970s in signal modeling where an unknown signal is analyzed to look for patterns and to make predictions based on its history. An initial and somewhat successful approach to applying this kind of signal modeling to language was achieved with the use of hidden Markov models as detailed by Rabiner in 1989. This approach attempts to determine probabilities for the arbitrary number of models that could be being used in generating speech as well as modeling the probabilities for various words generated from each of these possible models. Similar approaches were employed in early speech recognition attempts starting in the late 70s at IBM using word/part-of-speech pair probabilities. 
      More recently these kinds of statistical approaches have been applied to more difficult tasks such as topic identification using Bayesian parameter estimation to infer topic probabilities in text documents.  
      Applications 
      
      
       Further information: Natural language processing
       
      Applied computational linguistics is largely equivalent with natural language processing. Example applications for end users include speech recognition software, such as Apple's Siri feature, spellcheck tools, speech synthesis programs, which are often used to demonstrate pronunciation or help the disabled, and machine translation programs and websites, such as Google Translate. 
      Computational linguistics are also helpful in situations involving social media and the Internet, e.g., for providing content filters in chatrooms or on website searches, for grouping and organizing content through social media mining, document retrieval and clustering. For instance, if a person searches "red, large, four-wheeled vehicle," to find pictures of a red truck, the search engine will still find the information desired by matching words such as "four-wheeled" with "car". 
      Computational approaches are also important to support linguistic research, e.g., in corpus linguistics or historical linguistics. As for the study of change over time, computational methods can contribute to the modeling and identification of language families (see further quantitative comparative linguistics or phylogenetics), as well as the modeling of changes in sound and meaning.  
      Legacy 
      The subject of computational linguistics has had a recurring impact on popular culture:  
      
       The Star Trek franchise features heavily classical NLP applications, most notably machine translation (universal translator), natural language user interfaces and question answering. 
       The 1983 film WarGames features a young computer hacker who interacts with an artificially intelligent supercomputer. 
       A 1997 film, Conceiving Ada, focuses on Ada Lovelace, considered one of the first computer programmers, as well as themes of computational linguistics. 
       Her, a 2013 film, depicts a man's interactions with the "world's first artificially intelligent operating system." 
       The 2014 film The Imitation Game follows the life of computer scientist Alan Turing, developer of the Turing Test. 
       The 2015 film Ex Machina centers around human interaction with artificial intelligence. 
       The 2016 film Arrival, based on Ted Chiang's Story of Your Life, takes a whole new approach of linguistics to communicate with advanced alien race called heptapods.
       
      See also 
      
       
        
        Philosophy portal
       
       
      
       
       
        Artificial intelligence in fiction 
        Collostructional analysis 
        Computational lexicology 
        Computational Linguistics (journal) 
        Computational models of language acquisition 
        Computational semantics 
        Computational semiotics 
        Computer-assisted reviewing 
        Dialog systems 
        Glottochronology 
        Grammar induction 
        Human speechome project 
        Internet linguistics 
        Lexicostatistics 
        Natural language processing 
        Natural language user interface 
        Quantitative linguistics 
        Semantic relatedness 
        Semantometrics 
        Systemic functional linguistics 
        Translation memory 
        Universal Networking Language
        
       
      References 
      
       
        
        ^ "ACL Member Portal | The Association for Computational Linguistics Member Portal". www.aclweb.org. Retrieved 2020-08-17.  
        ^ 
          "What is Computational Linguistics?". The Association for Computational Linguistics. February 2005.  
        ^ As pointed out, for example, by Ido Dagan at his speech at the ACL 2010 banquet in Uppsala, Sweden.  
        ^ a b 
          Uszkoreit, Hans. "What Is Computational Linguistics?". Department of Computational Linguistics and Phonetics of Saarland University.  
        ^ 
          Socher, Richard. "Deep Learning For NLP-ACL 2012 Tutorial". Socher. Retrieved 2020-08-17.  
        ^ Oettinger, A. G. (1965). Computational Linguistics. The American Mathematical Monthly, Vol. 72, No. 2, Part 2: Computers and Computing, pp. 147–150.  
        ^ a b 
          McEnery, Thomas (1996). Corpus Linguistics: An Introduction. Edinburgh: Edinburgh University Press. p.&nbsp;114. ISBN&nbsp;978-0748611652.  
        ^ a b Bowern, Claire. "Computational phylogenetics." Annual Review of Linguistics 4 (2018): 281-296.  
        ^ John Hutchins: Retrospect and prospect in computer-based translation. Proceedings of MT Summit VII, 1999, pp. 30–44.  
        ^ Arnold B. Barach: Translating Machine 1975: And the Changes To Come.  
        ^ T. Crowley., C. Bowern. An Introduction to Historical Linguistics. Auckland, N.Z.: Oxford UP, 1992. Print.  
        ^ 
          "Deceased members". ICCL members. Archived from the original on 17 May 2017. Retrieved 15 November 2017.  
        ^ Natural Language Processing by Liz Liddy, Eduard Hovy, Jimmy Lin, John Prager, Dragomir Radev, Lucy Vanderwende, Ralph Weischedel  
        ^ "Computational Linguistics and Phonetics".  
        ^ "Yatsko's Computational Linguistics Laboratory".  
        ^ "CLIP".  
        ^ Computational Linguistics&nbsp;– Department of Linguistics&nbsp;– Georgetown College  
        ^ "UPenn Linguistics: Computational Linguistics".  
        ^ Jurafsky, D., &amp; Martin, J. H. (2009). Speech and language processing: An introduction to natural language processing, computational linguistics, and speech recognition. Upper Saddle River, N.J: Pearson Prentice Hall.  
        ^ Bowerman, M. (1988). The "no negative evidence" problem: How do children avoid constructing an overly general grammar. Explaining language universals.  
        ^ a b c d Braine, M.D.S. (1971). On two types of models of the internalization of grammars. In D.I. Slobin (Ed.), The ontogenesis of grammar: A theoretical perspective. New York: Academic Press.  
        ^ Powers, D.M.W. &amp; Turk, C.C.R. (1989). Machine Learning of Natural Language. Springer-Verlag. 
          ISBN&nbsp;978-0-387-19557-5.  
        ^ a b 
          Elman, Jeffrey L. (1993). "Learning and development in neural networks: The importance of starting small". Cognition. 48 (1): 71–99. doi:10.1016/0010-0277(93)90058-4. PMID&nbsp;8403835. S2CID&nbsp;2105042.  
        ^ 
          Salvi, G.; Montesano, L.; Bernardino, A.; Santos-Victor, J. (2012). "Language bootstrapping: learning word meanings from the perception-action association". IEEE Transactions on Systems, Man, and Cybernetics. Part B. 42 (3): 660–71. arXiv:1711.09714. doi:10.1109/TSMCB.2011.2172420. PMID&nbsp;22106152. S2CID&nbsp;977486.  
        ^ 
          Gong, T.; Shuai, L.; Tamariz, M. &amp; Jäger, G. (2012). E. Scalas (ed.). "Studying Language Change Using Price Equation and Pólya-urn Dynamics". PLOS ONE. 7 (3): e33171. Bibcode:2012PLoSO...733171G. doi:10.1371/journal.pone.0033171. PMC&nbsp;3299756. PMID&nbsp;22427981.  
        ^ 
          Marcus, M. &amp; Marcinkiewicz, M. (1993). "Building a large annotated corpus of English: The Penn Treebank" (PDF). Computational Linguistics. 19 (2): 313–330.  
        ^ 
          Taylor, Ann (2003). "1". Treebanks. Spring Netherlands. pp.&nbsp;5–22.  
        ^ a b 
          Angus, D.; Smith, A. &amp; Wiles, J. (2012). "Conceptual recurrence plots: revealing patterns in human discourse" (PDF). IEEE Transactions on Visualization and Computer Graphics. 18 (6): 988–97. doi:10.1109/TVCG.2011.100. PMID&nbsp;22499664. S2CID&nbsp;359497.  
        ^ a b 
          Furuhashi, S. &amp; Hayakawa, Y. (2012). "Lognormality of the Distribution of Japanese Sentence Lengths". Journal of the Physical Society of Japan. 81 (3): 034004. Bibcode:2012JPSJ...81c4004F. doi:10.1143/JPSJ.81.034004.  
        ^ 
          Turing, A. M. (1950). "Computing machinery and intelligence". Mind. 59 (236): 433–460. doi:10.1093/mind/lix.236.433. JSTOR&nbsp;2251299.  
        ^ 
          Weizenbaum, J. (1966). "ELIZA—a computer program for the study of natural language communication between man and machine". Communications of the ACM. 9 (1): 36–45. doi:10.1145/365153.365168. S2CID&nbsp;1896290.  
        ^ 
          Och, F. J.; Ney, H. (2003). "A Systematic Comparison of Various Statistical Alignment Models". Computational Linguistics. 29 (1): 19–51. doi:10.1162/089120103321337421.  
        ^ 
          Mairesse, F. (2011). "Controlling user perceptions of linguistic style: Trainable generation of personality traits". Computational Linguistics. 37 (3): 455–488. doi:10.1162/COLI_a_00063.  
        ^ 
          Language Files. The Ohio State University Department of Linguistics. 2011. pp.&nbsp;624–634. ISBN&nbsp;9780814251799.  
        ^ 
          Bledsoe, W. W. &amp; Browning, I. (1959). Pattern recognition and reading by machine. Papers presented at the December 1–3, 1959, eastern joint IRE-AIEE-ACM computer conference on – IRE-AIEE-ACM ’59 (Eastern). New York, New York, USA: ACM Press. pp.&nbsp;225–232. doi:10.1145/1460299.1460326.  
        ^ 
          Mosteller, F. (1963). "Inference in an authorship problem". Journal of the American Statistical Association. 58 (302): 275–309. doi:10.2307/2283270. JSTOR&nbsp;2283270.  
        ^ 
          Winograd, T. (1971). "Procedures as a Representation for Data in a Computer Program for Understanding Natural Language" (Report). Archived from the original on 2016-11-01. Retrieved 2012-06-15. }: Cite journal requires |journal= (help)  
        ^ 
          Woods, W.; Kaplan, R. &amp; Nash-Webber, B. (1972). "The lunar sciences natural language information system" (Report). }: Cite journal requires |journal= (help)  
        ^ 
          Rabiner, L. (1989). "A tutorial on hidden Markov models and selected applications in speech recognition". Proceedings of the IEEE. 77 (2): 257–286. CiteSeerX&nbsp;10.1.1.381.3454. doi:10.1109/5.18626.  
        ^ 
          Bahl, L.; Baker, J.; Cohen, P.; Jelinek, F. (1978). "Recognition of continuously read natural corpus". ICASSP '78. IEEE International Conference on Acoustics, Speech, and Signal Processing. Vol.&nbsp;3. pp.&nbsp;422–424. doi:10.1109/ICASSP.1978.1170402.  
        ^ 
          Blei, D. &amp; Ng, A. (2003). "Latent dirichlet allocation". The Journal of Machine Learning. 3: 993–1022.  
        ^ a b 
          "Careers in Computational Linguistics". California State University. Retrieved 19 September 2016.  
        ^ Marujo, Lu
              
               
                
                 
                  
                   
                   
                    i
                    
                   
                    ´
                    
                   
                  
                 
                
               
              
               }}
               
              
            s et al. "Automatic Keyword Extraction on Twitter." Language Technologies Institute, Carnegie Mellon University, n.d. Web. 19 Sept. 2016.  
        ^ 
          "Computational Linguistics". Stanford Encyclopedia of Philosophy. Metaphysics Research Lab, Stanford University. Feb 26, 2014. Retrieved Apr 19, 2017.  
        ^ Pigoli, Davide, et al. "The analysis of acoustic phonetic data: exploring differences in the spoken romance languages." arXiv preprint arXiv:1507.07587 985 (2015); Group, The Functional Phylogenies. "Phylogenetic inference for function-valued traits: speech sound evolution." Trends in ecology &amp; evolution 27.3 (2012): 160-166..  
        ^  e.g. Hamilton, William L., Jure Leskovec, and Dan Jurafsky. "Diachronic word embeddings reveal statistical laws of semantic change." arXiv preprint arXiv:1605.09096 (2016).  
        ^ 
          "'Star Trek' translators reach for the final frontier". www.cnn.com. Retrieved 2020-08-17.  
        ^ 
          Badham, John (1983-06-03), WarGames, retrieved 2016-02-22  
        ^ 
          Hershman-Leeson, Lynn (1999-02-19), Conceiving Ada, retrieved 2016-02-22  
        ^ 
          Jonze, Spike (2014-01-10), Her, retrieved 2016-02-18  
        ^ 
          Tyldum, Morten (2014-12-25), The Imitation Game, retrieved 2016-02-18  
        ^ 
          Garland, Alex (2015-04-24), Ex Machina, retrieved 2016-02-18  
        ^ 
          Villeneuve, Denis (2016-10-10). "Arrival". IMDb. Retrieved 18 December 2019.  
       
       
      Further reading 
      
       
       
        
         Bates, M (1995). "Models of natural language understanding". Proceedings of the National Academy of Sciences of the United States of America. 92 (22): 9977–9982. Bibcode:1995PNAS...92.9977B. doi:10.1073/pnas.92.22.9977. PMC&nbsp;40721. PMID&nbsp;7479812. 
        Steven Bird, Ewan Klein, and Edward Loper (2009). Natural Language Processing with Python. O'Reilly Media. 
         ISBN&nbsp;978-0-596-51649-9. 
        Daniel Jurafsky and James H. Martin (2008). Speech and Language Processing, 2nd edition. Pearson Prentice Hall. 
         ISBN&nbsp;978-0-13-187321-6. 
        Mohamed Zakaria KURDI (2016). Natural Language Processing and Computational Linguistics: speech, morphology, and syntax, Volume 1. ISTE-Wiley. 
         ISBN&nbsp;978-1848218482. 
        Mohamed Zakaria KURDI (2017). Natural Language Processing and Computational Linguistics: semantics, discourse, and applications, Volume 2. ISTE-Wiley. 
         ISBN&nbsp;978-1848219212.
        
       
      External links 
       
       
         
          
         Wikiversity has learning resources about Computational linguistics
         
       
       
       
       
         
          
         Wikimedia Commons has media related to Computational linguistics.
         
       
       
      
       Association for Computational Linguistics (ACL) 
        
         ACL Anthology of research papers 
         ACL Wiki for Computational Linguistics
         
       CICLing annual conferences on Computational Linguistics 
       Computational Linguistics&nbsp;– Applications workshop 
       Free online introductory book on Computational Linguistics at the Wayback Machine (archived January 25, 2008) 
       Language Technology World 
       Resources for Text, Speech and Language Processing 
       The Research Group in Computational Linguistics
       
      
       
      
      
       
        
         
          
           
           
            
             v
             t
             e
            
           
           
            Computer science
           
         
         
          
           
            Note: This template roughly follows the 2012 ACM Computing Classification System.
           
         
         
          Hardware
          
            
            
             Printed circuit board 
             Peripheral 
             Integrated circuit 
             Very Large Scale Integration 
             Systems on Chip (SoCs) 
             Energy consumption (Green computing) 
             Electronic design automation 
             Hardware acceleration
             
           
          
           
            
           
         
         
          Computer systems organization
          
            
            
             Computer architecture 
             Embedded system 
             Real-time computing 
             Dependability
             
           
         
         
          Networks
          
            
            
             Network architecture 
             Network protocol 
             Network components 
             Network scheduler 
             Network performance evaluation 
             Network service
             
           
         
         
          Software organization
          
            
            
             Interpreter 
             Middleware 
             Virtual machine 
             Operating system 
             Software quality
             
           
         
         
          Software notations and tools
          
            
            
             Programming paradigm 
             Programming language 
             Compiler 
             Domain-specific language 
             Modeling language 
             Software framework 
             Integrated development environment 
             Software configuration management 
             Software library 
             Software repository
             
           
         
         
          Software development
          
            
            
             Control variable 
             Software development process 
             Requirements analysis 
             Software design 
             Software construction 
             Software deployment 
             Software maintenance 
             Programming team 
             Open-source model
             
           
         
         
          Theory of computation
          
            
            
             Model of computation 
             Formal language 
             Automata theory 
             Computability theory 
             Computational complexity theory 
             Logic 
             Semantics
             
           
         
         
          Algorithms
          
            
            
             Algorithm design 
             Analysis of algorithms 
             Algorithmic efficiency 
             Randomized algorithm 
             Computational geometry
             
           
         
         
          Mathematics of computing
          
            
            
             Discrete mathematics 
             Probability 
             Statistics 
             Mathematical software 
             Information theory 
             Mathematical analysis 
             Numerical analysis 
             Theoretical computer science
             
           
         
         
          Information systems
          
            
            
             Database management system 
             Information storage systems 
             Enterprise information system 
             Social information systems 
             Geographic information system 
             Decision support system 
             Process control system 
             Multimedia information system 
             Data mining 
             Digital library 
             Computing platform 
             Digital marketing 
             World Wide Web 
             Information retrieval
             
           
         
         
          Security
          
            
            
             Cryptography 
             Formal methods 
             Security services 
             Intrusion detection system 
             Hardware security 
             Network security 
             Information security 
             Application security
             
           
         
         
          Human–computer interaction
          
            
            
             Interaction design 
             Social computing 
             Ubiquitous computing 
             Visualization 
             Accessibility
             
           
         
         
          Concurrency
          
            
            
             Concurrent computing 
             Parallel computing 
             Distributed computing 
             Multithreading 
             Multiprocessing
             
           
         
         
          Artificial intelligence
          
            
            
             Natural language processing 
             Knowledge representation and reasoning 
             Computer vision 
             Automated planning and scheduling 
             Search methodology 
             Control method 
             Philosophy of artificial intelligence 
             Distributed artificial intelligence
             
           
         
         
          Machine learning
          
            
            
             Supervised learning 
             Unsupervised learning 
             Reinforcement learning 
             Multi-task learning 
             Cross-validation
             
           
         
         
          Graphics
          
            
            
             Animation 
             Rendering 
             Image manipulation 
             Graphics processing unit 
             Mixed reality 
             Virtual reality 
             Image compression 
             Solid modeling
             
           
         
         
          Applied computing
          
            
            
             E-commerce 
             Enterprise software 
             Computational mathematics 
             Computational physics 
             Computational chemistry 
             Computational biology 
             Computational social science 
             Computational engineering 
             Computational healthcare 
             Digital art 
             Electronic publishing 
             Cyberwarfare 
             Electronic voting 
             Video games 
             Word processing 
             Operations research 
             Educational technology 
             Document management
             
           
         
         
          
            
            
              Category 
              Outline 
             WikiProject 
              Commons
             
           
         
        
       
       
      
       
      
      
       
        
         
          Authority control: National libraries 
          
            
            
             France (data) 
             Germany 
             United States 
             Latvia
             
           
         
        
       
          
     
     
      
      
     
      Retrieved from "https://en.wikipedia.org/w/index.php?title=Computational_linguistics&amp;oldid=1067527805"
     
     
    
     
      Categories: 
      
       Computational linguistics
       Subfields of computer science
       Formal sciences
       Cognitive science
       Computational fields of study
      
     
     
      Hidden categories: 
      
       CS1 errors: missing periodical
       Articles with short description
       Short description is different from Wikidata
       Articles containing overly long summaries
       Articles that may contain original research from October 2015
       All articles that may contain original research
       Commons category link from Wikidata
       Webarchive template wayback links
       Articles with BNF identifiers
       Articles with GND identifiers
       Articles with LCCN identifiers
       Articles with LNB identifiers
      
     
     
    
   
   
    
   
   
   Navigation menu 
    
     
      Personal tools  
      
      
       Not logged in
       Talk
       Contributions
       Create account
       Log in
       
      
     
     
      
       Namespaces  
       
       
        Article
        Talk
        
       
      
      
       
       Variants expanded collapsed  
       
        
       
      
     
     
      
       Views  
       
       
        Read
        Edit
        View history
        
       
      
      
       
       More expanded collapsed  
       
        
       
      
      
       
        Search  
        
         
          
          
          
          
         
        
       
      
     
    
    
      
     
     
      Navigation  
      
      
       Main page
       Contents
       Current events
       Random article
       About Wikipedia
       Contact us
       Donate
       
      
     
     
      Contribute  
      
      
       Help
       Learn to edit
       Community portal
       Recent changes
       Upload file
       
      
     
     
      Tools  
      
      
       What links here
       Related changes
       Upload file
       Special pages
       Permanent link
       Page information
       Cite this page
       Wikidata item
       
      
     
     
      Print/export  
      
      
       Download as PDF
       Printable version
       
      
     
     
      In other projects  
      
      
       Wikimedia Commons
       Wikiversity
       
      
     
     
      Languages  
      
      
       Afrikaans
       العربية
       বাংলা
       Bân-lâm-gú
       Беларуская
       Беларуская (тарашкевіца)
       Български
       Brezhoneg
       Català
       Čeština
       Dansk
       Deutsch
       Eesti
       Ελληνικά
       Español
       Esperanto
       Euskara
       فارسی
       Français
       Gaeilge
       Gaelg
       Galego
       한국어
       Հայերեն
       हिन्दी
       Hrvatski
       Ido
       Bahasa Indonesia
       Íslenska
       Italiano
       עברית
       ქართული
       Қазақша
       Кыргызча
       Latgaļu
       Latviešu
       Lietuvių
       Lingua Franca Nova
       Magyar
       മലയാളം
       Bahasa Melayu
       Nederlands
       日本語
       ߒߞߏ
       Norsk nynorsk
       Polski
       Português
       Română
       Русский
       Shqip
       Simple English
       Slovenščina
       Српски / srpski
       Srpskohrvatski / српскохрватски
       Suomi
       ไทย
       Тоҷикӣ
       Türkçe
       Українська
       Tiếng Việt
       吴语
       中文
       
      
       Edit links
       
      
     
    
   
   
    
     This page was last edited on 23 January 2022, at 23:36&nbsp;(UTC). 
    Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. 
    
    
    Privacy policy 
    About Wikipedia 
    Disclaimers 
    Contact Wikipedia 
    Mobile view 
    Developers 
    Statistics 
    Cookie statement 
    
    
     
     
    
   
   
   
    
 
